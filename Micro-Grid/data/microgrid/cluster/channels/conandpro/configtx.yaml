# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
Organizations:
    - &Orderer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Orderer

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ../../crypto-config/ordererOrganizations/cluster.microgrid/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &Consumer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ConsumerMSP

        # ID to load the MSP definition as
        ID: ConsumerMSP

        MSPDir: ../../crypto-config/peerOrganizations/consumer.cluster.microgrid/msp
        
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ConsumerMSP.admin', 'ConsumerMSP.peer', 'ConsumerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ConsumerMSP.admin', 'ConsumerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ConsumerMSP.admin')"
    - &Producer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ProducerMSP

        # ID to load the MSP definition as
        ID: ProducerMSP

        MSPDir: ../../crypto-config/peerOrganizations/producer.cluster.microgrid/msp
        
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ProducerMSP.admin', 'ProducerMSP.peer', 'ProducerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ProducerMSP.admin', 'ProducerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ProducerMSP.admin')"

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        V1_4_3: true
        V1_3: false
        V1_1: false
    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        V1_4_2: true
        V1_1: false
    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        V1_4_2: true
        V1_3: false
        V1_2: false
        V1_1: false

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults
    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            #Rule: "MAJORITY Admins"
            Rule: "ANY Admins"
    Capabilities:
        <<: *ApplicationCapabilities

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults
    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka" "etcdraft"
    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 98 MB
        PreferredMaxBytes: 512 KB

    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"
    Capabilities:
        <<: *OrdererCapabilities

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:
    TwoOrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - *Consumer
            - *Producer

    TwoOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer1.cluster.microgrid
                  Port: 7050
                  ClientTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer1.cluster.microgrid/tls/server.crt
                  ServerTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer1.cluster.microgrid/tls/server.crt
                - Host: orderer2.cluster.microgrid
                  Port: 7050
                  ClientTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer2.cluster.microgrid/tls/server.crt
                  ServerTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer2.cluster.microgrid/tls/server.crt
                - Host: orderer3.cluster.microgrid
                  Port: 7050
                  ClientTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer3.cluster.microgrid/tls/server.crt
                  ServerTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer3.cluster.microgrid/tls/server.crt
                - Host: orderer4.cluster.microgrid
                  Port: 7050
                  ClientTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer4.cluster.microgrid/tls/server.crt
                  ServerTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer4.cluster.microgrid/tls/server.crt
                - Host: orderer5.cluster.microgrid
                  Port: 7050
                  ClientTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer5.cluster.microgrid/tls/server.crt
                  ServerTLSCert: ../../crypto-config/ordererOrganizations/cluster.microgrid/orderers/orderer5.cluster.microgrid/tls/server.crt
            Addresses:
                - orderer1.cluster.microgrid:7050
                - orderer2.cluster.microgrid:7050
                - orderer3.cluster.microgrid:7050
                - orderer4.cluster.microgrid:7050
                - orderer5.cluster.microgrid:7050
            Organizations:
            - *Orderer
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *Orderer
        Consortiums:
            SampleConsortium:
                Organizations:
                - *Consumer
                - *Producer
