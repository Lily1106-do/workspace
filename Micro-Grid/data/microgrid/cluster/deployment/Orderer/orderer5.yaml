# pvc template
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: microgrid-cluster-orderer-orderer5
  namespace: microgrid-cluster-orderer
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: microgrid-cluster-orderer
    name: microgrid-cluster-orderer-orderer5
  nfs:
    server: 192.168.136.131
    path: /opt/share/microgrid/cluster/hlledger/Orderer/orderer5

# pvc template
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: microgrid-cluster-orderer-orderer5
  namespace: microgrid-cluster-orderer
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Mi

# orderer deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: microgrid-cluster-orderer
  name: orderer5
spec:
  replicas: 1
  selector:
    matchLabels:
      namespace: microgrid-cluster-orderer
      app: hlledger
      role: orderer
      orderer-name: orderer5
  strategy: {}
  template:
    metadata:
      labels:
        namespace: microgrid-cluster-orderer
        app: hlledger
        role: orderer
        orderer-name: orderer5
    spec:
      imagePullSecrets:
      - name: dockerhub-token
      hostAliases:
        - ip: 10.105.16.133
          hostnames:
          - "orderer1.cluster.microgrid"
        - ip: 10.106.93.136
          hostnames:
          - "orderer2.cluster.microgrid"
        - ip: 10.110.48.161
          hostnames:
          - "orderer3.cluster.microgrid"
        - ip: 10.110.69.38
          hostnames:
          - "orderer4.cluster.microgrid"
        - ip: 127.0.0.1
          hostnames:
          - "orderer5.cluster.microgrid"
      containers:
      - name: orderer5
        image: registry.cn-hangzhou.aliyuncs.com/timechainer/hyperledger/fabric-orderer:1.4.8
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - orderer
        env:
        - name: TZ
          value: "Asia/Shanghai"
        - name: FABRIC_LOGGING_SPEC
          value: "info"
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: "0.0.0.0"
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: "file"
        - name: ORDERER_GENERAL_GENESISFILE
          value: "/var/hyperledger/orderer/genesis.block"
        - name: ORDERER_GENERAL_LOCALMSPID
          value: "OrdererMSP"
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: "/var/hyperledger/orderer/msp"
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: "/var/hyperledger/orderer/tls/server.key"
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: "/var/hyperledger/orderer/tls/server.crt"
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: "[/var/hyperledger/orderer/tls/ca.crt]"
        - name: ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR
          value: "1"
        - name: ORDERER_KAFKA_VERBOSE
          value: "true"
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: "/var/hyperledger/orderer/tls/server.crt"
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: "/var/hyperledger/orderer/tls/server.key"
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: "[/var/hyperledger/orderer/tls/ca.crt]"
        - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
          value: "bridge"
        - name: ORDERER_METRICS_PROVIDER
          value: "prometheus"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        ports:
        - containerPort: 7050
        - containerPort: 8443
        volumeMounts:
        - name: orderer-data
          mountPath: "/var/hyperledger/orderer/genesis.block"
          subPath: systemchannel/genesis.block
        - name: orderer-data
          mountPath: "/var/hyperledger/orderer/msp"
          subPath: orderer5.cluster.microgrid/msp
        - name: orderer-data
          mountPath: "/var/hyperledger/orderer/tls"
          subPath: orderer5.cluster.microgrid/tls
        - name: orderer-data
          mountPath: "/etc/hyperledger/fabric/orderer.yaml"
          subPath: config/orderer.yaml
        - name: orderer-data
          mountPath: "/etc/hyperledger/fabric/core.yaml"
          subPath: config/core.yaml
        - name: orderer-data
          mountPath: "/var/hyperledger/production"
          subPath: production
        - name: orderer-data
          mountPath: "/opt/log"
          subPath: log
      volumes:
      - name: orderer-data
        persistentVolumeClaim:
          claimName: microgrid-cluster-orderer-orderer5